// Generated by view binder compiler. Do not edit!
package com.paul.chef.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.AppBarLayout;
import com.kizitonwose.calendarview.CalendarView;
import com.paul.chef.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentCalendarBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CalendarView calendarView;

  @NonNull
  public final Button editBtn;

  @NonNull
  public final AppBarLayout exOneAppBarLayout;

  @NonNull
  public final CalendarDayLegendBinding legendLayout;

  @NonNull
  public final TextView textView26;

  @NonNull
  public final View view;

  private FragmentCalendarBinding(@NonNull ConstraintLayout rootView,
      @NonNull CalendarView calendarView, @NonNull Button editBtn,
      @NonNull AppBarLayout exOneAppBarLayout, @NonNull CalendarDayLegendBinding legendLayout,
      @NonNull TextView textView26, @NonNull View view) {
    this.rootView = rootView;
    this.calendarView = calendarView;
    this.editBtn = editBtn;
    this.exOneAppBarLayout = exOneAppBarLayout;
    this.legendLayout = legendLayout;
    this.textView26 = textView26;
    this.view = view;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentCalendarBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentCalendarBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_calendar, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentCalendarBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.calendarView;
      CalendarView calendarView = ViewBindings.findChildViewById(rootView, id);
      if (calendarView == null) {
        break missingId;
      }

      id = R.id.editBtn;
      Button editBtn = ViewBindings.findChildViewById(rootView, id);
      if (editBtn == null) {
        break missingId;
      }

      id = R.id.exOneAppBarLayout;
      AppBarLayout exOneAppBarLayout = ViewBindings.findChildViewById(rootView, id);
      if (exOneAppBarLayout == null) {
        break missingId;
      }

      id = R.id.legendLayout;
      View legendLayout = ViewBindings.findChildViewById(rootView, id);
      if (legendLayout == null) {
        break missingId;
      }
      CalendarDayLegendBinding binding_legendLayout = CalendarDayLegendBinding.bind(legendLayout);

      id = R.id.textView26;
      TextView textView26 = ViewBindings.findChildViewById(rootView, id);
      if (textView26 == null) {
        break missingId;
      }

      id = R.id.view;
      View view = ViewBindings.findChildViewById(rootView, id);
      if (view == null) {
        break missingId;
      }

      return new FragmentCalendarBinding((ConstraintLayout) rootView, calendarView, editBtn,
          exOneAppBarLayout, binding_legendLayout, textView26, view);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
