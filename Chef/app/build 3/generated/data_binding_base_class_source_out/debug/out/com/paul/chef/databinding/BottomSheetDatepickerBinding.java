// Generated by view binder compiler. Do not edit!
package com.paul.chef.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.AppBarLayout;
import com.kizitonwose.calendarview.CalendarView;
import com.paul.chef.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class BottomSheetDatepickerBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppBarLayout datePickerAppBarLayout;

  @NonNull
  public final CalendarView datePickerCalendarView;

  @NonNull
  public final Button datePickerCancel;

  @NonNull
  public final ImageButton datePickerDismiss;

  @NonNull
  public final View datePickerDivider19;

  @NonNull
  public final CalendarDayLegendBinding datePickerLegendLayout;

  @NonNull
  public final Button dateSelected;

  @NonNull
  public final View view4;

  private BottomSheetDatepickerBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppBarLayout datePickerAppBarLayout, @NonNull CalendarView datePickerCalendarView,
      @NonNull Button datePickerCancel, @NonNull ImageButton datePickerDismiss,
      @NonNull View datePickerDivider19, @NonNull CalendarDayLegendBinding datePickerLegendLayout,
      @NonNull Button dateSelected, @NonNull View view4) {
    this.rootView = rootView;
    this.datePickerAppBarLayout = datePickerAppBarLayout;
    this.datePickerCalendarView = datePickerCalendarView;
    this.datePickerCancel = datePickerCancel;
    this.datePickerDismiss = datePickerDismiss;
    this.datePickerDivider19 = datePickerDivider19;
    this.datePickerLegendLayout = datePickerLegendLayout;
    this.dateSelected = dateSelected;
    this.view4 = view4;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static BottomSheetDatepickerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static BottomSheetDatepickerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.bottom_sheet_datepicker, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static BottomSheetDatepickerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.datePickerAppBarLayout;
      AppBarLayout datePickerAppBarLayout = ViewBindings.findChildViewById(rootView, id);
      if (datePickerAppBarLayout == null) {
        break missingId;
      }

      id = R.id.datePickerCalendarView;
      CalendarView datePickerCalendarView = ViewBindings.findChildViewById(rootView, id);
      if (datePickerCalendarView == null) {
        break missingId;
      }

      id = R.id.date_picker_cancel;
      Button datePickerCancel = ViewBindings.findChildViewById(rootView, id);
      if (datePickerCancel == null) {
        break missingId;
      }

      id = R.id.date_picker_dismiss;
      ImageButton datePickerDismiss = ViewBindings.findChildViewById(rootView, id);
      if (datePickerDismiss == null) {
        break missingId;
      }

      id = R.id.date_picker_divider19;
      View datePickerDivider19 = ViewBindings.findChildViewById(rootView, id);
      if (datePickerDivider19 == null) {
        break missingId;
      }

      id = R.id.datePickerLegendLayout;
      View datePickerLegendLayout = ViewBindings.findChildViewById(rootView, id);
      if (datePickerLegendLayout == null) {
        break missingId;
      }
      CalendarDayLegendBinding binding_datePickerLegendLayout = CalendarDayLegendBinding.bind(datePickerLegendLayout);

      id = R.id.dateSelected;
      Button dateSelected = ViewBindings.findChildViewById(rootView, id);
      if (dateSelected == null) {
        break missingId;
      }

      id = R.id.view4;
      View view4 = ViewBindings.findChildViewById(rootView, id);
      if (view4 == null) {
        break missingId;
      }

      return new BottomSheetDatepickerBinding((ConstraintLayout) rootView, datePickerAppBarLayout,
          datePickerCalendarView, datePickerCancel, datePickerDismiss, datePickerDivider19,
          binding_datePickerLegendLayout, dateSelected, view4);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
