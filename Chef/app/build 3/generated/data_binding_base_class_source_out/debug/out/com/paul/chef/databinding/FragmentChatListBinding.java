// Generated by view binder compiler. Do not edit!
package com.paul.chef.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.MaterialToolbar;
import com.paul.chef.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentChatListBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppBarLayout appBarLayout;

  @NonNull
  public final ImageView chatChefEmptySticker;

  @NonNull
  public final TextView chatEmptyText;

  @NonNull
  public final RecyclerView chatListRecycler;

  @NonNull
  public final ImageView chatUserEmptySticker;

  @NonNull
  public final CoordinatorLayout coordinatorLayout;

  @NonNull
  public final MaterialToolbar topAppBar;

  private FragmentChatListBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppBarLayout appBarLayout, @NonNull ImageView chatChefEmptySticker,
      @NonNull TextView chatEmptyText, @NonNull RecyclerView chatListRecycler,
      @NonNull ImageView chatUserEmptySticker, @NonNull CoordinatorLayout coordinatorLayout,
      @NonNull MaterialToolbar topAppBar) {
    this.rootView = rootView;
    this.appBarLayout = appBarLayout;
    this.chatChefEmptySticker = chatChefEmptySticker;
    this.chatEmptyText = chatEmptyText;
    this.chatListRecycler = chatListRecycler;
    this.chatUserEmptySticker = chatUserEmptySticker;
    this.coordinatorLayout = coordinatorLayout;
    this.topAppBar = topAppBar;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentChatListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentChatListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_chat_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentChatListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appBarLayout;
      AppBarLayout appBarLayout = ViewBindings.findChildViewById(rootView, id);
      if (appBarLayout == null) {
        break missingId;
      }

      id = R.id.chat_chef_empty_sticker;
      ImageView chatChefEmptySticker = ViewBindings.findChildViewById(rootView, id);
      if (chatChefEmptySticker == null) {
        break missingId;
      }

      id = R.id.chat_empty_text;
      TextView chatEmptyText = ViewBindings.findChildViewById(rootView, id);
      if (chatEmptyText == null) {
        break missingId;
      }

      id = R.id.chat_list_recycler;
      RecyclerView chatListRecycler = ViewBindings.findChildViewById(rootView, id);
      if (chatListRecycler == null) {
        break missingId;
      }

      id = R.id.chat_user_empty_sticker;
      ImageView chatUserEmptySticker = ViewBindings.findChildViewById(rootView, id);
      if (chatUserEmptySticker == null) {
        break missingId;
      }

      id = R.id.coordinatorLayout;
      CoordinatorLayout coordinatorLayout = ViewBindings.findChildViewById(rootView, id);
      if (coordinatorLayout == null) {
        break missingId;
      }

      id = R.id.topAppBar;
      MaterialToolbar topAppBar = ViewBindings.findChildViewById(rootView, id);
      if (topAppBar == null) {
        break missingId;
      }

      return new FragmentChatListBinding((ConstraintLayout) rootView, appBarLayout,
          chatChefEmptySticker, chatEmptyText, chatListRecycler, chatUserEmptySticker,
          coordinatorLayout, topAppBar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
