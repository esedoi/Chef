// Generated by view binder compiler. Do not edit!
package com.paul.chef.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.paul.chef.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentAddAddressBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button addAddressCancel;

  @NonNull
  public final Button addAddressSave;

  @NonNull
  public final TextView addAddressTxt;

  @NonNull
  public final ConstraintLayout constraintLayout2;

  @NonNull
  public final ImageView imageView12;

  private FragmentAddAddressBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button addAddressCancel, @NonNull Button addAddressSave,
      @NonNull TextView addAddressTxt, @NonNull ConstraintLayout constraintLayout2,
      @NonNull ImageView imageView12) {
    this.rootView = rootView;
    this.addAddressCancel = addAddressCancel;
    this.addAddressSave = addAddressSave;
    this.addAddressTxt = addAddressTxt;
    this.constraintLayout2 = constraintLayout2;
    this.imageView12 = imageView12;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentAddAddressBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentAddAddressBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_add_address, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentAddAddressBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_address_cancel;
      Button addAddressCancel = ViewBindings.findChildViewById(rootView, id);
      if (addAddressCancel == null) {
        break missingId;
      }

      id = R.id.add_address_save;
      Button addAddressSave = ViewBindings.findChildViewById(rootView, id);
      if (addAddressSave == null) {
        break missingId;
      }

      id = R.id.add_address_txt;
      TextView addAddressTxt = ViewBindings.findChildViewById(rootView, id);
      if (addAddressTxt == null) {
        break missingId;
      }

      id = R.id.constraintLayout2;
      ConstraintLayout constraintLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout2 == null) {
        break missingId;
      }

      id = R.id.imageView12;
      ImageView imageView12 = ViewBindings.findChildViewById(rootView, id);
      if (imageView12 == null) {
        break missingId;
      }

      return new FragmentAddAddressBinding((ConstraintLayout) rootView, addAddressCancel,
          addAddressSave, addAddressTxt, constraintLayout2, imageView12);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
