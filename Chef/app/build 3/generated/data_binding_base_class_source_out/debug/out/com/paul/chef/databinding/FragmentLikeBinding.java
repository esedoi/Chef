// Generated by view binder compiler. Do not edit!
package com.paul.chef.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.MaterialToolbar;
import com.paul.chef.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentLikeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView chatEmptyTxt;

  @NonNull
  public final ImageView chatUserEmptyImg;

  @NonNull
  public final AppBarLayout likeAppBarLayout;

  @NonNull
  public final RecyclerView likeRecycler;

  @NonNull
  public final MaterialToolbar likeTopAppBar;

  private FragmentLikeBinding(@NonNull ConstraintLayout rootView, @NonNull TextView chatEmptyTxt,
      @NonNull ImageView chatUserEmptyImg, @NonNull AppBarLayout likeAppBarLayout,
      @NonNull RecyclerView likeRecycler, @NonNull MaterialToolbar likeTopAppBar) {
    this.rootView = rootView;
    this.chatEmptyTxt = chatEmptyTxt;
    this.chatUserEmptyImg = chatUserEmptyImg;
    this.likeAppBarLayout = likeAppBarLayout;
    this.likeRecycler = likeRecycler;
    this.likeTopAppBar = likeTopAppBar;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentLikeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentLikeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_like, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentLikeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.chat_empty_txt;
      TextView chatEmptyTxt = ViewBindings.findChildViewById(rootView, id);
      if (chatEmptyTxt == null) {
        break missingId;
      }

      id = R.id.chat_user_empty_img;
      ImageView chatUserEmptyImg = ViewBindings.findChildViewById(rootView, id);
      if (chatUserEmptyImg == null) {
        break missingId;
      }

      id = R.id.like_appBarLayout;
      AppBarLayout likeAppBarLayout = ViewBindings.findChildViewById(rootView, id);
      if (likeAppBarLayout == null) {
        break missingId;
      }

      id = R.id.like_recycler;
      RecyclerView likeRecycler = ViewBindings.findChildViewById(rootView, id);
      if (likeRecycler == null) {
        break missingId;
      }

      id = R.id.like_topAppBar;
      MaterialToolbar likeTopAppBar = ViewBindings.findChildViewById(rootView, id);
      if (likeTopAppBar == null) {
        break missingId;
      }

      return new FragmentLikeBinding((ConstraintLayout) rootView, chatEmptyTxt, chatUserEmptyImg,
          likeAppBarLayout, likeRecycler, likeTopAppBar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
