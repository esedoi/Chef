// Generated by view binder compiler. Do not edit!
package com.paul.chef.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputLayout;
import com.paul.chef.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentChefEditBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button profileEditAvatarBtn;

  @NonNull
  public final Button profileEditConfirmBtn;

  @NonNull
  public final TextView profileEditEmail;

  @NonNull
  public final ImageView profileEditImg;

  @NonNull
  public final TextInputLayout profileEditIntro;

  @NonNull
  public final TextInputLayout profileEditNameLayout;

  private FragmentChefEditBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button profileEditAvatarBtn, @NonNull Button profileEditConfirmBtn,
      @NonNull TextView profileEditEmail, @NonNull ImageView profileEditImg,
      @NonNull TextInputLayout profileEditIntro, @NonNull TextInputLayout profileEditNameLayout) {
    this.rootView = rootView;
    this.profileEditAvatarBtn = profileEditAvatarBtn;
    this.profileEditConfirmBtn = profileEditConfirmBtn;
    this.profileEditEmail = profileEditEmail;
    this.profileEditImg = profileEditImg;
    this.profileEditIntro = profileEditIntro;
    this.profileEditNameLayout = profileEditNameLayout;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentChefEditBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentChefEditBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_chef_edit, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentChefEditBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.profile_edit_avatar_btn;
      Button profileEditAvatarBtn = ViewBindings.findChildViewById(rootView, id);
      if (profileEditAvatarBtn == null) {
        break missingId;
      }

      id = R.id.profile_edit_confirm_btn;
      Button profileEditConfirmBtn = ViewBindings.findChildViewById(rootView, id);
      if (profileEditConfirmBtn == null) {
        break missingId;
      }

      id = R.id.profile_edit_email;
      TextView profileEditEmail = ViewBindings.findChildViewById(rootView, id);
      if (profileEditEmail == null) {
        break missingId;
      }

      id = R.id.profile_edit_img;
      ImageView profileEditImg = ViewBindings.findChildViewById(rootView, id);
      if (profileEditImg == null) {
        break missingId;
      }

      id = R.id.profile_edit_intro;
      TextInputLayout profileEditIntro = ViewBindings.findChildViewById(rootView, id);
      if (profileEditIntro == null) {
        break missingId;
      }

      id = R.id.profile_edit_name_layout;
      TextInputLayout profileEditNameLayout = ViewBindings.findChildViewById(rootView, id);
      if (profileEditNameLayout == null) {
        break missingId;
      }

      return new FragmentChefEditBinding((ConstraintLayout) rootView, profileEditAvatarBtn,
          profileEditConfirmBtn, profileEditEmail, profileEditImg, profileEditIntro,
          profileEditNameLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
