// Generated by view binder compiler. Do not edit!
package com.paul.chef.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.paul.chef.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemTransactionChildBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final View divider6;

  @NonNull
  public final TextView textView41;

  @NonNull
  public final TextView textView42;

  @NonNull
  public final TextView transacChefReceive;

  @NonNull
  public final TextView transacDate;

  @NonNull
  public final TextView transacOrder;

  private ItemTransactionChildBinding(@NonNull ConstraintLayout rootView, @NonNull View divider6,
      @NonNull TextView textView41, @NonNull TextView textView42,
      @NonNull TextView transacChefReceive, @NonNull TextView transacDate,
      @NonNull TextView transacOrder) {
    this.rootView = rootView;
    this.divider6 = divider6;
    this.textView41 = textView41;
    this.textView42 = textView42;
    this.transacChefReceive = transacChefReceive;
    this.transacDate = transacDate;
    this.transacOrder = transacOrder;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemTransactionChildBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemTransactionChildBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_transaction_child, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemTransactionChildBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.divider6;
      View divider6 = ViewBindings.findChildViewById(rootView, id);
      if (divider6 == null) {
        break missingId;
      }

      id = R.id.textView41;
      TextView textView41 = ViewBindings.findChildViewById(rootView, id);
      if (textView41 == null) {
        break missingId;
      }

      id = R.id.textView42;
      TextView textView42 = ViewBindings.findChildViewById(rootView, id);
      if (textView42 == null) {
        break missingId;
      }

      id = R.id.transac_chef_receive;
      TextView transacChefReceive = ViewBindings.findChildViewById(rootView, id);
      if (transacChefReceive == null) {
        break missingId;
      }

      id = R.id.transac_date;
      TextView transacDate = ViewBindings.findChildViewById(rootView, id);
      if (transacDate == null) {
        break missingId;
      }

      id = R.id.transac_order;
      TextView transacOrder = ViewBindings.findChildViewById(rootView, id);
      if (transacOrder == null) {
        break missingId;
      }

      return new ItemTransactionChildBinding((ConstraintLayout) rootView, divider6, textView41,
          textView42, transacChefReceive, transacDate, transacOrder);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
