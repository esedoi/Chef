// Generated by view binder compiler. Do not edit!
package com.paul.chef.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.RatingBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.card.MaterialCardView;
import com.paul.chef.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemMenuListBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialCardView cardView;

  @NonNull
  public final RecyclerView itemMenuImgRecycler;

  @NonNull
  public final CheckBox itemMenuLikeCheck;

  @NonNull
  public final TextView itemMenuPerPrice;

  @NonNull
  public final TextView itemMenuRating;

  @NonNull
  public final TextView itemMenuRatingNum;

  @NonNull
  public final TextView menuTitle;

  @NonNull
  public final RatingBar ratingBar2;

  @NonNull
  public final TextView textView17;

  private ItemMenuListBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialCardView cardView, @NonNull RecyclerView itemMenuImgRecycler,
      @NonNull CheckBox itemMenuLikeCheck, @NonNull TextView itemMenuPerPrice,
      @NonNull TextView itemMenuRating, @NonNull TextView itemMenuRatingNum,
      @NonNull TextView menuTitle, @NonNull RatingBar ratingBar2, @NonNull TextView textView17) {
    this.rootView = rootView;
    this.cardView = cardView;
    this.itemMenuImgRecycler = itemMenuImgRecycler;
    this.itemMenuLikeCheck = itemMenuLikeCheck;
    this.itemMenuPerPrice = itemMenuPerPrice;
    this.itemMenuRating = itemMenuRating;
    this.itemMenuRatingNum = itemMenuRatingNum;
    this.menuTitle = menuTitle;
    this.ratingBar2 = ratingBar2;
    this.textView17 = textView17;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemMenuListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemMenuListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_menu_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemMenuListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cardView;
      MaterialCardView cardView = ViewBindings.findChildViewById(rootView, id);
      if (cardView == null) {
        break missingId;
      }

      id = R.id.item_menu_img_recycler;
      RecyclerView itemMenuImgRecycler = ViewBindings.findChildViewById(rootView, id);
      if (itemMenuImgRecycler == null) {
        break missingId;
      }

      id = R.id.item_menu_like_check;
      CheckBox itemMenuLikeCheck = ViewBindings.findChildViewById(rootView, id);
      if (itemMenuLikeCheck == null) {
        break missingId;
      }

      id = R.id.item_menu_perPrice;
      TextView itemMenuPerPrice = ViewBindings.findChildViewById(rootView, id);
      if (itemMenuPerPrice == null) {
        break missingId;
      }

      id = R.id.item_menu_rating;
      TextView itemMenuRating = ViewBindings.findChildViewById(rootView, id);
      if (itemMenuRating == null) {
        break missingId;
      }

      id = R.id.item_menu_rating_num;
      TextView itemMenuRatingNum = ViewBindings.findChildViewById(rootView, id);
      if (itemMenuRatingNum == null) {
        break missingId;
      }

      id = R.id.menuTitle;
      TextView menuTitle = ViewBindings.findChildViewById(rootView, id);
      if (menuTitle == null) {
        break missingId;
      }

      id = R.id.ratingBar2;
      RatingBar ratingBar2 = ViewBindings.findChildViewById(rootView, id);
      if (ratingBar2 == null) {
        break missingId;
      }

      id = R.id.textView17;
      TextView textView17 = ViewBindings.findChildViewById(rootView, id);
      if (textView17 == null) {
        break missingId;
      }

      return new ItemMenuListBinding((ConstraintLayout) rootView, cardView, itemMenuImgRecycler,
          itemMenuLikeCheck, itemMenuPerPrice, itemMenuRating, itemMenuRatingNum, menuTitle,
          ratingBar2, textView17);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
