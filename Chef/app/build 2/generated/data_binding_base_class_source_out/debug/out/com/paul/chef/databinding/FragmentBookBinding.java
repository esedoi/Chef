// Generated by view binder compiler. Do not edit!
package com.paul.chef.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.chip.Chip;
import com.google.android.material.chip.ChipGroup;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.paul.chef.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentBookBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView addressTextView;

  @NonNull
  public final TextView bookAddress;

  @NonNull
  public final Chip bookChefSpaceChip;

  @NonNull
  public final ChipGroup bookChipGroup;

  @NonNull
  public final TextInputEditText bookDateSelect;

  @NonNull
  public final TextInputLayout bookDateSelectLayout;

  @NonNull
  public final Button bookEditAddress;

  @NonNull
  public final TextInputLayout bookNoteLayout;

  @NonNull
  public final TextInputEditText bookPeopleSelect;

  @NonNull
  public final TextInputLayout bookPeopleSelectLayout;

  @NonNull
  public final TextInputEditText bookTimeSelect;

  @NonNull
  public final TextInputLayout bookTimeSelectLayout;

  @NonNull
  public final Chip bookUserSpaceChip;

  @NonNull
  public final MaterialCardView cardView2;

  @NonNull
  public final View divider14;

  @NonNull
  public final View divider34;

  @NonNull
  public final TextView finalPerPrice;

  @NonNull
  public final TextView finalTotal;

  @NonNull
  public final TextView orginalPerPrice;

  @NonNull
  public final TextView orginalTotal;

  @NonNull
  public final Button pay;

  @NonNull
  public final TextView textView11;

  @NonNull
  public final TextView textView12;

  @NonNull
  public final TextView textView13;

  @NonNull
  public final TextView textView15;

  @NonNull
  public final TextView textView21;

  @NonNull
  public final TextView textView22;

  @NonNull
  public final TextView textView23;

  @NonNull
  public final TextView userFee;

  @NonNull
  public final TextView userPay;

  private FragmentBookBinding(@NonNull ConstraintLayout rootView, @NonNull TextView addressTextView,
      @NonNull TextView bookAddress, @NonNull Chip bookChefSpaceChip,
      @NonNull ChipGroup bookChipGroup, @NonNull TextInputEditText bookDateSelect,
      @NonNull TextInputLayout bookDateSelectLayout, @NonNull Button bookEditAddress,
      @NonNull TextInputLayout bookNoteLayout, @NonNull TextInputEditText bookPeopleSelect,
      @NonNull TextInputLayout bookPeopleSelectLayout, @NonNull TextInputEditText bookTimeSelect,
      @NonNull TextInputLayout bookTimeSelectLayout, @NonNull Chip bookUserSpaceChip,
      @NonNull MaterialCardView cardView2, @NonNull View divider14, @NonNull View divider34,
      @NonNull TextView finalPerPrice, @NonNull TextView finalTotal,
      @NonNull TextView orginalPerPrice, @NonNull TextView orginalTotal, @NonNull Button pay,
      @NonNull TextView textView11, @NonNull TextView textView12, @NonNull TextView textView13,
      @NonNull TextView textView15, @NonNull TextView textView21, @NonNull TextView textView22,
      @NonNull TextView textView23, @NonNull TextView userFee, @NonNull TextView userPay) {
    this.rootView = rootView;
    this.addressTextView = addressTextView;
    this.bookAddress = bookAddress;
    this.bookChefSpaceChip = bookChefSpaceChip;
    this.bookChipGroup = bookChipGroup;
    this.bookDateSelect = bookDateSelect;
    this.bookDateSelectLayout = bookDateSelectLayout;
    this.bookEditAddress = bookEditAddress;
    this.bookNoteLayout = bookNoteLayout;
    this.bookPeopleSelect = bookPeopleSelect;
    this.bookPeopleSelectLayout = bookPeopleSelectLayout;
    this.bookTimeSelect = bookTimeSelect;
    this.bookTimeSelectLayout = bookTimeSelectLayout;
    this.bookUserSpaceChip = bookUserSpaceChip;
    this.cardView2 = cardView2;
    this.divider14 = divider14;
    this.divider34 = divider34;
    this.finalPerPrice = finalPerPrice;
    this.finalTotal = finalTotal;
    this.orginalPerPrice = orginalPerPrice;
    this.orginalTotal = orginalTotal;
    this.pay = pay;
    this.textView11 = textView11;
    this.textView12 = textView12;
    this.textView13 = textView13;
    this.textView15 = textView15;
    this.textView21 = textView21;
    this.textView22 = textView22;
    this.textView23 = textView23;
    this.userFee = userFee;
    this.userPay = userPay;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentBookBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentBookBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_book, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentBookBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addressTextView;
      TextView addressTextView = ViewBindings.findChildViewById(rootView, id);
      if (addressTextView == null) {
        break missingId;
      }

      id = R.id.book_address;
      TextView bookAddress = ViewBindings.findChildViewById(rootView, id);
      if (bookAddress == null) {
        break missingId;
      }

      id = R.id.book_chef_space_chip;
      Chip bookChefSpaceChip = ViewBindings.findChildViewById(rootView, id);
      if (bookChefSpaceChip == null) {
        break missingId;
      }

      id = R.id.book_chip_group;
      ChipGroup bookChipGroup = ViewBindings.findChildViewById(rootView, id);
      if (bookChipGroup == null) {
        break missingId;
      }

      id = R.id.book_date_select;
      TextInputEditText bookDateSelect = ViewBindings.findChildViewById(rootView, id);
      if (bookDateSelect == null) {
        break missingId;
      }

      id = R.id.book_date_select_layout;
      TextInputLayout bookDateSelectLayout = ViewBindings.findChildViewById(rootView, id);
      if (bookDateSelectLayout == null) {
        break missingId;
      }

      id = R.id.book_edit_address;
      Button bookEditAddress = ViewBindings.findChildViewById(rootView, id);
      if (bookEditAddress == null) {
        break missingId;
      }

      id = R.id.book_note_layout;
      TextInputLayout bookNoteLayout = ViewBindings.findChildViewById(rootView, id);
      if (bookNoteLayout == null) {
        break missingId;
      }

      id = R.id.book_people_select;
      TextInputEditText bookPeopleSelect = ViewBindings.findChildViewById(rootView, id);
      if (bookPeopleSelect == null) {
        break missingId;
      }

      id = R.id.book_people_select_layout;
      TextInputLayout bookPeopleSelectLayout = ViewBindings.findChildViewById(rootView, id);
      if (bookPeopleSelectLayout == null) {
        break missingId;
      }

      id = R.id.book_time_select;
      TextInputEditText bookTimeSelect = ViewBindings.findChildViewById(rootView, id);
      if (bookTimeSelect == null) {
        break missingId;
      }

      id = R.id.book_time_select_layout;
      TextInputLayout bookTimeSelectLayout = ViewBindings.findChildViewById(rootView, id);
      if (bookTimeSelectLayout == null) {
        break missingId;
      }

      id = R.id.book_user_space_chip;
      Chip bookUserSpaceChip = ViewBindings.findChildViewById(rootView, id);
      if (bookUserSpaceChip == null) {
        break missingId;
      }

      id = R.id.cardView2;
      MaterialCardView cardView2 = ViewBindings.findChildViewById(rootView, id);
      if (cardView2 == null) {
        break missingId;
      }

      id = R.id.divider14;
      View divider14 = ViewBindings.findChildViewById(rootView, id);
      if (divider14 == null) {
        break missingId;
      }

      id = R.id.divider34;
      View divider34 = ViewBindings.findChildViewById(rootView, id);
      if (divider34 == null) {
        break missingId;
      }

      id = R.id.finalPerPrice;
      TextView finalPerPrice = ViewBindings.findChildViewById(rootView, id);
      if (finalPerPrice == null) {
        break missingId;
      }

      id = R.id.finalTotal;
      TextView finalTotal = ViewBindings.findChildViewById(rootView, id);
      if (finalTotal == null) {
        break missingId;
      }

      id = R.id.orginalPerPrice;
      TextView orginalPerPrice = ViewBindings.findChildViewById(rootView, id);
      if (orginalPerPrice == null) {
        break missingId;
      }

      id = R.id.orginalTotal;
      TextView orginalTotal = ViewBindings.findChildViewById(rootView, id);
      if (orginalTotal == null) {
        break missingId;
      }

      id = R.id.pay;
      Button pay = ViewBindings.findChildViewById(rootView, id);
      if (pay == null) {
        break missingId;
      }

      id = R.id.textView11;
      TextView textView11 = ViewBindings.findChildViewById(rootView, id);
      if (textView11 == null) {
        break missingId;
      }

      id = R.id.textView12;
      TextView textView12 = ViewBindings.findChildViewById(rootView, id);
      if (textView12 == null) {
        break missingId;
      }

      id = R.id.textView13;
      TextView textView13 = ViewBindings.findChildViewById(rootView, id);
      if (textView13 == null) {
        break missingId;
      }

      id = R.id.textView15;
      TextView textView15 = ViewBindings.findChildViewById(rootView, id);
      if (textView15 == null) {
        break missingId;
      }

      id = R.id.textView21;
      TextView textView21 = ViewBindings.findChildViewById(rootView, id);
      if (textView21 == null) {
        break missingId;
      }

      id = R.id.textView22;
      TextView textView22 = ViewBindings.findChildViewById(rootView, id);
      if (textView22 == null) {
        break missingId;
      }

      id = R.id.textView23;
      TextView textView23 = ViewBindings.findChildViewById(rootView, id);
      if (textView23 == null) {
        break missingId;
      }

      id = R.id.userFee;
      TextView userFee = ViewBindings.findChildViewById(rootView, id);
      if (userFee == null) {
        break missingId;
      }

      id = R.id.userPay;
      TextView userPay = ViewBindings.findChildViewById(rootView, id);
      if (userPay == null) {
        break missingId;
      }

      return new FragmentBookBinding((ConstraintLayout) rootView, addressTextView, bookAddress,
          bookChefSpaceChip, bookChipGroup, bookDateSelect, bookDateSelectLayout, bookEditAddress,
          bookNoteLayout, bookPeopleSelect, bookPeopleSelectLayout, bookTimeSelect,
          bookTimeSelectLayout, bookUserSpaceChip, cardView2, divider14, divider34, finalPerPrice,
          finalTotal, orginalPerPrice, orginalTotal, pay, textView11, textView12, textView13,
          textView15, textView21, textView22, textView23, userFee, userPay);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
