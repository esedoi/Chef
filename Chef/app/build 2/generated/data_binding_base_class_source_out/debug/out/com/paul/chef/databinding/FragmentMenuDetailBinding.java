// Generated by view binder compiler. Do not edit!
package com.paul.chef.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RatingBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.paul.chef.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentMenuDetailBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button choice;

  @NonNull
  public final TextView detailChefName;

  @NonNull
  public final TextView detailMenuIntro;

  @NonNull
  public final TextView detailName;

  @NonNull
  public final LinearLayout displayDishLinear;

  @NonNull
  public final View divider10;

  @NonNull
  public final View divider9;

  @NonNull
  public final ImageView imageView5;

  @NonNull
  public final RecyclerView imagesRecycler;

  @NonNull
  public final CheckBox menuDetailLikeCheck;

  @NonNull
  public final Button menuDetailMoreReviewBtn;

  @NonNull
  public final TextView menuDetailRatingNum;

  @NonNull
  public final TextView menuDetailRatingTxt;

  @NonNull
  public final RecyclerView menuDetailReviewRecycler;

  @NonNull
  public final TextView menuDetailReviewTitle;

  @NonNull
  public final NestedScrollView nestedScrollView2;

  @NonNull
  public final RatingBar ratingBar4;

  private FragmentMenuDetailBinding(@NonNull ConstraintLayout rootView, @NonNull Button choice,
      @NonNull TextView detailChefName, @NonNull TextView detailMenuIntro,
      @NonNull TextView detailName, @NonNull LinearLayout displayDishLinear,
      @NonNull View divider10, @NonNull View divider9, @NonNull ImageView imageView5,
      @NonNull RecyclerView imagesRecycler, @NonNull CheckBox menuDetailLikeCheck,
      @NonNull Button menuDetailMoreReviewBtn, @NonNull TextView menuDetailRatingNum,
      @NonNull TextView menuDetailRatingTxt, @NonNull RecyclerView menuDetailReviewRecycler,
      @NonNull TextView menuDetailReviewTitle, @NonNull NestedScrollView nestedScrollView2,
      @NonNull RatingBar ratingBar4) {
    this.rootView = rootView;
    this.choice = choice;
    this.detailChefName = detailChefName;
    this.detailMenuIntro = detailMenuIntro;
    this.detailName = detailName;
    this.displayDishLinear = displayDishLinear;
    this.divider10 = divider10;
    this.divider9 = divider9;
    this.imageView5 = imageView5;
    this.imagesRecycler = imagesRecycler;
    this.menuDetailLikeCheck = menuDetailLikeCheck;
    this.menuDetailMoreReviewBtn = menuDetailMoreReviewBtn;
    this.menuDetailRatingNum = menuDetailRatingNum;
    this.menuDetailRatingTxt = menuDetailRatingTxt;
    this.menuDetailReviewRecycler = menuDetailReviewRecycler;
    this.menuDetailReviewTitle = menuDetailReviewTitle;
    this.nestedScrollView2 = nestedScrollView2;
    this.ratingBar4 = ratingBar4;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentMenuDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentMenuDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_menu_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentMenuDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.choice;
      Button choice = ViewBindings.findChildViewById(rootView, id);
      if (choice == null) {
        break missingId;
      }

      id = R.id.detailChefName;
      TextView detailChefName = ViewBindings.findChildViewById(rootView, id);
      if (detailChefName == null) {
        break missingId;
      }

      id = R.id.detailMenuIntro;
      TextView detailMenuIntro = ViewBindings.findChildViewById(rootView, id);
      if (detailMenuIntro == null) {
        break missingId;
      }

      id = R.id.detailName;
      TextView detailName = ViewBindings.findChildViewById(rootView, id);
      if (detailName == null) {
        break missingId;
      }

      id = R.id.displayDishLinear;
      LinearLayout displayDishLinear = ViewBindings.findChildViewById(rootView, id);
      if (displayDishLinear == null) {
        break missingId;
      }

      id = R.id.divider10;
      View divider10 = ViewBindings.findChildViewById(rootView, id);
      if (divider10 == null) {
        break missingId;
      }

      id = R.id.divider9;
      View divider9 = ViewBindings.findChildViewById(rootView, id);
      if (divider9 == null) {
        break missingId;
      }

      id = R.id.imageView5;
      ImageView imageView5 = ViewBindings.findChildViewById(rootView, id);
      if (imageView5 == null) {
        break missingId;
      }

      id = R.id.imagesRecycler;
      RecyclerView imagesRecycler = ViewBindings.findChildViewById(rootView, id);
      if (imagesRecycler == null) {
        break missingId;
      }

      id = R.id.menu_detail_like_check;
      CheckBox menuDetailLikeCheck = ViewBindings.findChildViewById(rootView, id);
      if (menuDetailLikeCheck == null) {
        break missingId;
      }

      id = R.id.menu_detail_more_review_btn;
      Button menuDetailMoreReviewBtn = ViewBindings.findChildViewById(rootView, id);
      if (menuDetailMoreReviewBtn == null) {
        break missingId;
      }

      id = R.id.menu_detail_rating_num;
      TextView menuDetailRatingNum = ViewBindings.findChildViewById(rootView, id);
      if (menuDetailRatingNum == null) {
        break missingId;
      }

      id = R.id.menu_detail_rating_txt;
      TextView menuDetailRatingTxt = ViewBindings.findChildViewById(rootView, id);
      if (menuDetailRatingTxt == null) {
        break missingId;
      }

      id = R.id.menu_detail_review_recycler;
      RecyclerView menuDetailReviewRecycler = ViewBindings.findChildViewById(rootView, id);
      if (menuDetailReviewRecycler == null) {
        break missingId;
      }

      id = R.id.menu_detail_review_title;
      TextView menuDetailReviewTitle = ViewBindings.findChildViewById(rootView, id);
      if (menuDetailReviewTitle == null) {
        break missingId;
      }

      id = R.id.nestedScrollView2;
      NestedScrollView nestedScrollView2 = ViewBindings.findChildViewById(rootView, id);
      if (nestedScrollView2 == null) {
        break missingId;
      }

      id = R.id.ratingBar4;
      RatingBar ratingBar4 = ViewBindings.findChildViewById(rootView, id);
      if (ratingBar4 == null) {
        break missingId;
      }

      return new FragmentMenuDetailBinding((ConstraintLayout) rootView, choice, detailChefName,
          detailMenuIntro, detailName, displayDishLinear, divider10, divider9, imageView5,
          imagesRecycler, menuDetailLikeCheck, menuDetailMoreReviewBtn, menuDetailRatingNum,
          menuDetailRatingTxt, menuDetailReviewRecycler, menuDetailReviewTitle, nestedScrollView2,
          ratingBar4);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
